

-- Show first name of patients that start with the letter 'C'
SELECT first_name FROM patients
WHERE first_name like 'c%'

-- Show first name and last name of patients that weight within the range of 100 to 120 (inclusive)
SELECT first_name,last_name from patients WHERE weight between 100 and 120

/*Update the patients table for the allergies column. If the patient's allergies is
null then replace it with 'NKA'*/
UPDATE patients set allergies='nka' WHERE allergies isnull

-- Show first name and last name concatinated into one column to show their full name.
SELECT concat(first_name,' ',last_name) AS 'full name' from patients

-- Show first name, last name, and the full province name of each patient.
SELECT t1.first_name,t1.last_name,t2.province_name
from patients t1 JOIN province_names t2
ON t1.province_id=t2.province_id

-- Show how many patients have a birth_date with 2010 as the birth year.
select count(*) from patients
WHERE year(birth_date)=2010

-- Show the first_name, last_name, and height of the patient with the greatest height.

SELECT first_name,last_name,height from patients
order by height DESC LIMIT 1

-- Show all columns for patients who have one of the following patient_ids:1,45,534,879,1000

SELECT * from patients
WHERE patient_id in (1,45,534,879,1000)

-- Show the total number of admissions
SELECT COUNT(*) from admissions

-- Show all the columns from admissions where the patient was admitted and discharged on the same day.
SELECT * from admissions
WHERE admission_date=discharge_date

-- Show the patient id and the total number of admissions for patient_id 579.
select patient_id,count(*) from admissions
WHERE patient_id=579


-- Based on the cities that our patients live in, show unique cities that are in province_id 'NS'?
select distinct city from patients where province_id='NS'

/* Write a query to find the first_name, last name and birth date of patients who has 
height greater than 160 and weight greater than 70*/

select first_name,last_name,birth_date from patients
where height>160 and weight>70

/*Write a query to find list of patients first_name, last_name,
and allergies where allergies are not null and are from the city of 'Hamilton'*/
select first_name,last_name,allergies from patients
where  city ='Hamilton' AND allergies notNULL 

-- Show unique birth years from patients and order them by ascending.
SELECT distinct year(birth_date) as 'year1' FROM patients
order by year1

-- Show unique first names from the patients table which only occurs once in the list.
select first_name from patients

select first_name,count(*) AS 'count1' from patients
group by first_name
HAVING count1=1
 --------------------- OR -----------------
 SELECT first_name
FROM (
    SELECT
      first_name,
      count(first_name) AS occurrencies
    FROM patients
    GROUP BY first_name
  )
WHERE occurrencies = 1


-- ----------------------------or -----------------
SELECT first_name
FROM patients
GROUP BY first_name
HAVING COUNT(first_name) = 1

/*Show patient_id and first_name from patients where their first_name start and
ends with 's' and is at least 6 characters long.*/

select patient_id, first_name from patients
WHERE first_name like 's%s' AND len(first_name)>=6

/*Show patient_id, first_name, last_name from patients whos diagnosis is 'Dementia'.

Primary diagnosis is stored in the admissions table.*/
select t1.patient_id,t1.first_name,t1.last_name from patients t1 join admissions t2
on t1.patient_id=t2.patient_id
where diagnosis='Dementia'
 
/*Display every patient's first_name.
Order the list by the length of each name and then by alphabetically.*/
SELECT first_name FROM patients
order by len(first_name) ASC,first_name ASC

/*Show the total amount of male patients and the total amount of female patients in the patients table.
Display the two results in the same row.*/
SELECT DISTINCT(select COUNT(*) from patients
WHERE gender='M') AS 'male_count',(select count(*) from patients
WHERE gender='F') AS 'male_count' FROM patients;

SELECT 
  SUM(Gender = 'M') as male_count, 
  SUM(Gender = 'F') AS female_count
FROM patients;

/*Show patient_id, diagnosis from admissions.
Find patients admitted multiple times for the same diagnosis.*/

select patient_id, diagnosis from admissions 
group by patient_id,diagnosis
HAVING count(*)>1

/*Show the city and the total number of patients in the city.
Order from most to least patients and then by city name ascending.*/
select city,count(*) from patients
group by city
order by count(*) DESC,city asc;


/*Show first name, last name and role of every person that is
either patient or doctor.
The roles are either "Patient" or "Doctor" 
allow duplicate values, use UNION ALL*/

select first_name,last_name,'Patient' AS role from patients  union all
select first_name,last_name,'Doctor' AS role from doctors

/*Show all allergies ordered by popularity.
Remove NULL values from query.*/
SELECT allergies,count(*) from patients
where allergies notnull
group by allergies
order by count(*) desc

/*Show all patient's first_name, last_name, and 
birth_date who were born in the 1970s decade.
Sort the list starting from the earliest birth_date.*/
select first_name,last_name,birth_date  FROM patients
where year(birth_date) between 1970 and 1979
order by birth_date
                    or 
SELECT
  first_name,
  last_name,
  birth_date
FROM patients
WHERE year(birth_date) LIKE '197%'
ORDER BY birth_date ASC

/*
We want to display each patient's full name in a single column.
Their last_name in all upper letters must appear first,
then first_name in all lower case letters. Separate the 
last_name and first_name with a comma.
Order the list by the first_name in decending order
EX: SMITH,jane*/

select concat(upper(last_name),',',lower(first_name)) from patients
order by first_name desc;

SELECT
  UPPER(last_name) || ',' || LOWER(first_name) AS new_name_format
FROM patients
ORDER BY first_name DESC;

/*Show the province_id(s), sum of height; where the 
total sum of its patient's height is greater than or equal to 7,000.*/

select province_id,sum(height) from patients
group by province_id
having sum(height)>=7000;


/*Show the difference between the largest weight 
and smallest weight for patients with the last name 'Maroni'*/
select MAX(weight)-min(weight) from patients where last_name='Maroni';

/*
Show all of the days of the month (1-31) and
how many admission_dates occurred on that day. 
Sort by the day with most admissions to least admissions.*/

select day(admission_date),count(*) from admissions
group by day(admission_date)
order by count(*) desc;


-- Show all columns for patient_id 542's most recent admission_date.
select * from admissions
where patient_id=542
order by admission_date desc limit 1;


/*Show patient_id, attending_doctor_id, and diagnosis for admissions 
that match one of the two criteria:
1. patient_id is an odd number and attending_doctor_id is either
1, 5, or 19.
2. attending_doctor_id contains a 2 and the length of 
patient_id is 3 characters.*/

select patient_id,attending_doctor_id,diagnosis from admissions
where (attending_doctor_id like '%2%' and length(patient_id)=3) or 
(attending_doctor_id in (1,5,19) AND mod(patient_id,2)=1 )

/*Show first_name, last_name, and the total number of 
admissions attended for each doctor.
Every admission has been attended by a doctor.*/
select t2.first_name,t2.last_name,count(*) from 
admissions t1 join
doctors t2
on t1.attending_doctor_id = t2.doctor_id




/*display the first name, last name and number of duplicate patients based 
on their first name and last name.
Ex: A patient with an identical name can be considered a duplicate.*/

select first_name,last_name,count(*) as 'number of duplicate'
from patients
group by first_name,last_name
having count(*)>1;

/*Display patient's full name,
height in the units feet rounded to 1 decimal,
weight in the unit pounds rounded to 0 decimals,
birth_date,
gender non abbreviated.

Convert CM to feet by dividing by 30.48.
Convert KG to pounds by multiplying by 2.205.*/

select concat(first_name,' ',last_name),round(height/30.48,1) ,
round(weight * 2.205),birth_date,
case
    when gender = 'M' then 'Male'
    else 'Female'
 end as gender
from patients;

/*Show patient_id, first_name, last_name from patients whose does not have
any records in the admissions table.
(Their patient_id does not exist in any admissions.patient_id rows.)*/

select patient_id,first_name,
last_name from patients
where patient_id not in (select p.patient_id from patients p join admissions a 
                                  on a.patient_id = p.patient_id);
                                  

/*Show all of the patients grouped into weight groups.
Show the total amount of patients in each weight group.
Order the list by the weight group decending.

For example, if they weight 100 to 109 they are placed in 
the 100 weight group, 110-119 = 110 weight group, etc.
*/
select t.weight_group,count(*) from (select *,
            case
                when weight between 10 and 19 then 10
                when weight between 20 and 29 then 20
                when weight between 30 and 39 then 30
                when weight between 40 and 49 then 40
                when weight between 50 and 59 then 50
                when weight between 60 and 69 then 60
                when weight between 70 and 79 then 70
                when weight between 80 and 89 then 80
                when weight between 90 and 99 then 90
                when weight between 100 and 109 then 100
                when weight between 110 and 119 then 110
                when weight between 120 and 129 then 120
                when weight between 130 and 139 then 130
                when weight between 140 and 149 then 140
                when weight between 150 and 159 then 150
                else 0
            end as weight_group
            from patients) t 
group by t.weight_group
order by t.weight_group desc

-- or 
SELECT
  COUNT(*) AS patients_in_group,
  FLOOR(weight / 10) * 10 AS weight_group
FROM patients
GROUP BY weight_group
ORDER BY weight_group DESC;


/*Show patient_id, weight, height, isObese from the patients table.

Display isObese as a boolean 0 or 1.

Obese is defined as weight(kg)/(height(m)2) >= 30.

weight is in units kg.

height is in units cm.*/

select patient_id,weight,height,
case 
	when weight/power(cast(height as float)/100,2)>=30 then 1
    else 0
    end as obese
from patients;


/*Show patient_id, first_name, last_name, and attending doctor's specialty.
Show only the patients who has a diagnosis as 'Epilepsy' and the doctor's first name is 'Lisa'

Check patients, admissions, and doctors tables for required information.*/

select  p.patient_id,p.first_name,p.last_name,d.specialty  from patients p join admissions a 
on p.patient_id = a.patient_id
join doctors d 
on d.doctor_id = a.attending_doctor_id
where diagnosis = 'Epilepsy' and d.first_name = 'Lisa';

/*All patients who have gone through admissions, can see their medical documents on our site.
Those patients are given a temporary password after their first admission. 
Show the patient_id and temp_password.

The password must be the following, in order:
1. patient_id
2. the numerical length of patient's last_name
3. year of patient's birth_date*/

select patient_id,concat(patient_id,length(last_name),year(birth_date)) as 'password' from patients
where patient_id in (select distinct a.patient_id from patients p join admissions a 
						on p.patient_id = a.patient_id)



/*
Each admission costs $50 for patients without insurance, and $10 for patients with insurance.
All patients with an even patient_id have insurance.

Give each patient a 'Yes' if they have insurance, and a 'No' if they don't have insurance.
Add up the admission_total cost for each has_insurance group.
*/

select has_insurance,sum(amount) from (select *,case 
                            when t.has_insurance='Yes' then 10
                            else 50
                            end as amount FROM
                                              (select *,
                                              case
                                                  when patient_id%2 is 0 then 'Yes'
                                                  else 'No'
                                                  end as has_insurance
                                                 from admissions) t)
group by has_insurance



/*Sort the province names in ascending order in such a way that the 
province 'Ontario' is always on top.*/
select province_name from province_names
order by case 
            when province_name='Ontario' then 0
                else 1
                end,
province_name asc



/*For each day display the total amount of admissions on that day.
Display the amount changed from the previous date.*/

select admission_date,A,a-b from (select admission_date,count(*) as 'A',
                                lag(count(*)) over(order by admission_date) as 'B'
                                from admissions
                                group by admission_date) t



/*We are looking for a specific patient. Pull all columns
for the patient who matches the following criteria:
- First_name contains an 'r' after the first two letters.
- Identifies their gender as 'F'
- Born in February, May, or December
- Their weight would be between 60kg and 80kg
- Their patient_id is an odd number
- They are from the city 'Kingston'*/

select * from patients
where first_name LIKE '__r%' AND gender='F' 
and weight between 60 and 80
and month(birth_date) in (2,5,12)
and city = 'Kingston'
and patient_id % 2 = 1




